
<document>
    <head>
        <title>Getting started</title>
        <css>docs.css</css>
    </head>
    <body>
        <div style="font-size: 5em;">
            CO<sup>W</sup>TCH<sub style="font-size: 1em;">O</sub>OX
        </div>
        <h1>Getting started with Cowtchoox</h1>
        <p>
            This document will provides basic information on Cowtchoox.
        </p>

        <p>
            The features evolve quickly, and the documentation doesn't, and there is a lot of bugs everywhere, so if something doesn't work,
            feel free to <a href="https://github.com/Sergueille/cowtchoox/issues">complain here</a>.
        </p>

        <h2>Installation</h2>

        <h3>Windows</h3>
        <p>
            Go here: <a href="https://github.com/Sergueille/cowtchoox/tags">https:\/\/github.com/Sergueille/cowtchoox/tags</a>, and download the latest release.
            You should get a `.zip` file. Unzip it where you want Cowtchoox to be installed.
            You now have to add this directory to your PATH. To do this, you can follow
            <a href="https://stackoverflow.com/questions/44272416/how-to-add-a-folder-to-path-environment-variable-in-windows-10-with-screensho#answer-44272417">
                these instructions
            </a>.
        </p>

        <h3>Other OS</h3>
        <p>
            I have no idea how to build this for you. You should consider 
            <a href="https://github.com/Sergueille/cowtchoox/issues">tell me how to do it</a>
            or building it yourself form the <a href="https://github.com/Sergueille/cowtchoox">source code</a>.
        </p>

        <h2>Compiling a file</h2>
        <p>
            Create a text file with your favorite editor, and save it as `hello_world.cow`.
            It should contain the following:
        </p>
        ``
<document>
    <head>
        <title>Hello world!</title>
    </head>
    <body>
        Hello world!
    </body>
</document>
        ``

        <p>
            Now, to compile the file, just call `cowtchoox hello_world.cow` in your command prompt. Cowtchoox will produce `out.pdf` and `out.html`.
            You can open `out.pdf` to see your beautiful document.
        </p>

        <h2>Basic syntax</h2>
        <p>
            First, <a href="https://developer.mozilla.org/en/docs/Learn/HTML/Introduction_to_HTML/Getting_started">learn how to write basic HTML</a>. 
            You just need a basic understanding.
            As you can see above, Cowtchoox looks a lot like HTML.
        </p>

        <h3>Document structure</h3>
        ``
<document>
    <head>
        <title>The title of the document</title>
    </head>
    <body>
        Contents of the document
    </body>
</document>
        ``

        <ul>
            <li>
                The `<head>` tag contains metadata about your document, such as title, style, paper format...
            </li>
            <li>
                The `<body>` tag contains the contents of the document.
            </li>
        </ul>
        
        <h3>Differences with HTML</h3>
        <h4>Comments</h4>
        <p>
            HTML comments are not supported. However, Cowtchoox uses <em>C-style comments</em>:
        </p>
        <ul>
            <li>Everything after `//` is ignored until the end of the line</li>
            <li>Everything between `/*` and `*/` is ignored, even across multiple lines</li>
        </ul>
                
        <h4>Escaping with `\`</h4>

        To escape characters (tell the compiler that they are regular character and have no special meaning), use a backslash: `\`.
        It escapes any character. HTML escaping like `&lt;` isn't supported.

        <h2>Using CSS</h2>
        To change the style of documents, we will use <em>CSS</em>.
        If you have no idea of what it is, <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/Getting_started">click here</a>.
        To tell the compiler to use a CSS file, include a `<css>` tag in the `<head>` of the document.
        ``
<document>
    <head>
        <title>The title of the document</title>
        <css>path to your file here</css>
    </head>
    <body>
        Bla, bla, bla...
    </body>
</document>
        ``

        You need to specify the path from the `.cow` file to the `css` file. For instance, if it is located in the same directory, just put the name of the file.
        You have to include the file extension.

        <h2>Math</h2>

        Cowtchoox have some special syntax to write math.
        There are several ways to create  math:
        <ul>
            <li>Use dollars for <em>inline</em> math: `$This is math$`</li>
            <li>Use double dollars for a big, centered block of math: `$$This is math$$`</li>
        </ul> 

        Inside math, comments, HTML tags and everything else is still supported.
        All spaces in math are not displayed, you can add them manually by escaping them: `\ ` (yes there is a space after the backslash).

        <br/>
        <br/>

        In math you can use <strong>math operators</strong>. The syntax is:
        ``
            ?operator_name {first argument} {second argument} ...
        ``
        For instance, `?frac{1}{2}` gives $?frac{1}{2}$.

        If an argument is only one objet, you can omit the braces: `?frac 1 2`

        <br/><br/>

        Some operators have an <strong>alias</strong>. It allow them to be called in a shorted way.
        For instance, to show $?belongsto$, you can use `?belongsto` or `â‚¬`.
        Aliases takes arguments exactly in the same way.

        <br/>

        Some aliases are <strong>infix</strong>. That means they have two arguments, and that the first should be placed <em>before</em>
        the alias. Here for a fraction: `1 / 2` or an exponent: `2 ^ n`.

        <br/><br/>

        You can add braces (`{}`) to group things. (It will create additional `<div>`s)

        <h2>Code blocks</h2>
        To add a code block:
        <ul>
            <li><code>\`your code here\`</code> for an inline code block</li>
            <li><code>\`\`your code here\`\`</code> for a big code block</li>
        </ul>

        Everything inside these will be <em>escaped</em>, that means that comments, backslash, etc will be displayed in the document.

        <br/>

        To make a code block, but with regular parsing inside:
        <ul>
            <li>`<code>your code here</code>` for an inline code block</li>
            <li>`<pre>your code here</pre>` for a big code block</li>
        </ul>

        <h2>Tips</h2>
        To edit your documents quickly, you can open `out.html` in the browser.
        When recompiling, Cowtchoox creates `out.html` in less than a second, and then takes some time to produce `out.pdf`, 
        so you just have to reload the page in your browser to see instant changes in the document.
        Note that some things may differ from the final pdf file.

        You will also be able to use the devtools to debug your CSS.

    </body>
</document>
