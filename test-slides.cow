
<document>
<head>
    <slides></slides>
    <slides-resources>slides-test-resources</slides-resources>
    <css relative-to="file">resources/test.css</css>
</head>
<body>
    <h1>New feature: <!cowtchoox/> slides!</h1>

    <span>Make beautiful presentations with your favorite document editing tool!</span>

    <!pagebreak/>

    <h1>HTML slides!</h1>

    <span>The browser is used to display the slides. This way: </span>
    <ul>
        <li>No specific application is needed on the computer,</li>
        <li>No compatibility issues: everything is embedded,</li>
        <li>Compatible with animated CSS styling, links, JS animations, and more!</li>
    </ul>

    <!pagebreak/>

    <h1>Example</h1>

    <h2>Ridiculous animations:</h2>
    <style style="display: none;">
        #test-rotate {
            animation: rotate 1s infinite;
        }

        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
    </style>

    <span id="test-rotate"style="transition: 500s; transform: rotate(4500000deg);">I'm rotating</span>


    <h2>Write JS scripts: <span>(and deal with consequences)</span></h2>
    <span>Can you do this with PowerPoint?</span>
    <!evaluate>
        document.getElementById('js-btn').addEventListener('click', () =\> {
            let counter = document.getElementById('js-example');
            counter.innerHTML = counter.innerHTML + 1;
        });

        ""
    </evaluate>
    <button id="js-btn">Press Me!</button>

    Counter:
    <span id="js-example">0</span>


    <!pagebreak/>

    <h1>How to do that?</h1>
    <span>Its <em>easy</em>! just add this in the head of the document:</span>

    ``
<document>
    <head>
        <slides></slides> // Just add this
        <slides-resources> /* put a folder path here */ </slides-resources>
    <head>
// ...
    ``

    <span>
        Put all the files you need (images, css, js...) in the folder you entered as `slides-resources`, so <!cowtchoox/>
        can embed them with your presentation.
    </span>

    <span>
        <!cowtchoox/> will create an `out` folder. Instead of showing document as usual, the html file will be in presentation mode.
    </span>

    <!pagebreak/>

    <h1>How to do that?</h1>
    <span>This is the folder that will be generated</span>

    ``
> out
| out.html    // Generated by cowchoox
| out.pdf     // Generated by cowchoox
| > resources       // Copied from specified folder
| | my_image.jpg
| | my_font.ttf
| > cowchoox_res    // Generated by cowchoox
    ``

    To include images, use:

    ``
<image src="resources/..."/>
    ``

    And for head links:

    ``
<css relative-to="file">resources/...</css>
    ``

    <!pagebreak/>

    <h1>Image test!</h1>
    <image src="resources/logo.png"></image>

</body>
</document>


